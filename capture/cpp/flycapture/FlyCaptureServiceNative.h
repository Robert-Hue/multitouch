/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_telekom_laboratories_capture_spi_FlyCaptureNative */

#ifndef _Included_de_telekom_laboratories_capture_spi_FlyCaptureNative
#define _Included_de_telekom_laboratories_capture_spi_FlyCaptureNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_telekom_laboratories_capture_spi_FlyCaptureNative
 * Method:    deviceHandles
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_telekom_laboratories_capture_spi_FlyCaptureNative_deviceHandles
  (JNIEnv *, jclass);

/*
 * Class:     de_telekom_laboratories_capture_spi_FlyCaptureNative
 * Method:    createDeviceHandle
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_de_telekom_laboratories_capture_spi_FlyCaptureNative_createDeviceHandle
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_telekom_laboratories_capture_spi_FlyCaptureNative
 * Method:    releaseDeviceHandle
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_telekom_laboratories_capture_spi_FlyCaptureNative_releaseDeviceHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     de_telekom_laboratories_capture_spi_FlyCaptureNative
 * Method:    connect
 * Signature: (JLde/telekom/laboratories/capture/VideoMode;)Z
 */
JNIEXPORT jboolean JNICALL Java_de_telekom_laboratories_capture_spi_FlyCaptureNative_connect
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     de_telekom_laboratories_capture_spi_FlyCaptureNative
 * Method:    disconnect
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_telekom_laboratories_capture_spi_FlyCaptureNative_disconnect
  (JNIEnv *, jclass, jlong);

/*
 * Class:     de_telekom_laboratories_capture_spi_FlyCaptureNative
 * Method:    capture
 * Signature: (JLjava/nio/Buffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_de_telekom_laboratories_capture_spi_FlyCaptureNative_capture
  (JNIEnv *, jclass, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
